if (isDebug) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
//每个使用kotlin的module都需要添加下面三行配置
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        if(!isDebug) {
            applicationId "com.example.tufei.mvpkotlin"
        }
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //kotlin直接使用控件id，略去自己手动findViewBindId的麻烦
    //每个使用该功能的module都需要配置
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    implementation project(':base')
    if(!isDebug){
        implementation project(":module_a")
        implementation project(":module_b")
    }

    //每个使用到dagger的module都需要添加下面两行配置
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    //ARouter
//    kapt 'com.alibaba:arouter-compiler:1.2.1'
}
